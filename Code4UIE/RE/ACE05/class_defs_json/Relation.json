{
    "ORG_AFF": "class ORG_AFF(Relation):\n    \"\"\"self.head is affiliated with the organization self.tail. (e.g., employment)\"\"\"\n    def __init__(\n        self,\n        head: ORG | PER | GPE = \"\",\n        tail: ORG | PER | GPE | FAC = \"\",\n    ):\n        self.head = head\n        self.tail = tail",
    "GEN_AFF": "class GEN_AFF(Relation):\n    \"\"\"self.head is affiliated with self.tail generally. (e.g., citizen)\"\"\"\n    def __init__(\n        self,\n        head: PER | FAC | ORG | GPE = \"\",\n        tail: LOC | PER | ORG | GPE = \"\",\n    ):\n        self.head = head\n        self.tail = tail",
    "PHYS": "class PHYS(Relation):\n    \"\"\"self.head is located in or near to self.tail.\"\"\"\n    def __init__(\n        self,\n        head: LOC | PER | FAC | ORG | GPE = \"\",\n        tail: LOC | FAC | VEH | ORG | GPE = \"\",\n    ):\n        self.head = head\n        self.tail = tail",
    "PART_WHOLE": "class PART_WHOLE(Relation):\n    \"\"\"self.head is part of self.tail.\"\"\"\n    def __init__(\n        self,\n        head: LOC | WEA | PER | FAC | VEH | ORG | GPE = \"\",\n        tail: LOC | WEA | FAC | VEH | ORG | GPE = \"\",\n    ):\n        self.head = head\n        self.tail = tail",
    "ART": "class ART(Relation):\n    \"\"\"self.head use/own/invent/manufacture self.tail.\"\"\"\n    def __init__(\n        self,\n        head: PER | FAC | ORG | GPE = \"\",\n        tail: WEA | VEH | FAC | ORG | GPE = \"\",\n    ):\n        self.head = head\n        self.tail = tail",
    "PER_SOC": "class PER_SOC(Relation):\n    \"\"\"Person self.head is related to the social organization self.tail. (e.g., family)\"\"\"\n    def __init__(\n        self,\n        head: PER = \"\",\n        tail: FAC | ORG | PER = \"\",\n    ):\n        self.head = head\n        self.tail = tail"
}